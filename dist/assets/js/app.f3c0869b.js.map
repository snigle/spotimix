{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?0216","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/assets/rezzo.wav","webpack:///./src/components/Lyrics.vue?2b0f","webpack:///./src/App.vue","webpack:///./src/components/Playlist.vue","webpack:///./src/components/Playlist.vue?4bc6","webpack:///./src/components/Playlist.vue?0d23","webpack:///./src/components/Lyrics.vue","webpack:///./src/components/Lyrics.vue?5e77","webpack:///./src/components/Player.vue","webpack:///./src/components/Player.vue?a274","webpack:///./src/components/Player.vue?3fbe","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?3f51","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","map","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","resolve","artist","default","trackName","required","porcentElapsed","geniusKey","loading","lyrics","genius","a","baseURL","params","access_token","watchGeniusKey","this","index","Math","round","watchTrackName","console","log","q","then","response","hits","search","firstResult","filter","type","api_path","song","div","document","createElement","innerHTML","embed_content","replace","location","protocol","trim","scriptURL","querySelector","src","fetch","text","scriptTxt","jsonline","split","find","match","jsonPart","eval","span","blocks","lyricsWithoutHTML","extractContent","cleanedLyrics","reduce","prev","current","join","space","children","querySelectorAll","textContent","innerText","toString","mounted","Lyrics","components","watch","with","Props","href","rel","integrity","crossorigin","allow","class","login","menu","hidden","setCredentials","input_genius","placeholder","input_spotify","soundVisualizer","playlists","playlist","selectedPlaylists","unselectPlaylist","selectPlaylist","generateSpotimix","item-key","item","element","ref","el","playlistRefsVue","spotimix","spotimixTracks","playlist_id","playlist_name","spotifyApi","getAccessToken","playing_track","min","playlistRepartition","savePlaylistRepartition","setPlayingTrack","currentPlayingTrack","artists","trackPreview","track","getTrackImage","alreadyListenedTracks","tracksToListen","tracksRaw","setAccessToken","offset","limit","getPlaylistItems","items","concat","undefined","uri","shuffle","array","floor","random","includes","currentIndex","findIndex","tr","Libeay","render","play","pause","next","player","$emit","delay","ms","Promise","setTimeout","audio","Audio","setVolume","volume","skipToNext","Player","emits","client_id","url","URL","redirect_uri","hostname","pathname","scopes","localStorage","getItem","clientSecret","clientId","redirectUri","spotimixId","tracksImage","trackDuration","startTime","duration","setItem","saveSoundVisualizer","JSON","stringify","initPlaylistRepartition","parse","album","images","width","updatePorcentElapsed","diff","asMilliseconds","tracksAfter","refreshToken","removeItem","saveSelectedPlaylists","initSelectedPlaylists","uniqBy","updateAccessToken","getRefreshedAccessToken","accessToken","expires_in","URLSearchParams","getRefreshableUserTokens","refresh_token","users","getMe","user","getMyPlaylists","lists","spotimixExist","getPlaylist","createPlaylist","public","collaborative","description","loadSpotimix","getCurrentlyPlayingTrack","current_playing","currently_playing_type","durationBeforeEnd","duration_ms","progress_ms","add","encodeURIComponent","getAllTracksBefore","currentTrack","tracksToAdd","forEach","elementAdded","selection","trackPlayed","chunks","chunk","removePlaylistItems","chunks2","addItemsToPlaylist","startPlaylist","tracks","copyToCloud","cloudName","cloudPlaylistIDTmp","cloudPlaylist","cloudPlaylistID","all","is_local","searchTracks","cloudTrack","trackIDs","App","Playlist","draggable","mount"],"mappings":"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","file":"assets/js/app.f3c0869b.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/spotimix/dist/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=234e8789&lang=less\"","var map = {\n\t\"./af\": \"2bfb\",\n\t\"./af.js\": \"2bfb\",\n\t\"./ar\": \"8e73\",\n\t\"./ar-dz\": \"a356\",\n\t\"./ar-dz.js\": \"a356\",\n\t\"./ar-kw\": \"423e\",\n\t\"./ar-kw.js\": \"423e\",\n\t\"./ar-ly\": \"1cfd\",\n\t\"./ar-ly.js\": \"1cfd\",\n\t\"./ar-ma\": \"0a84\",\n\t\"./ar-ma.js\": \"0a84\",\n\t\"./ar-sa\": \"8230\",\n\t\"./ar-sa.js\": \"8230\",\n\t\"./ar-tn\": \"6d83\",\n\t\"./ar-tn.js\": \"6d83\",\n\t\"./ar.js\": \"8e73\",\n\t\"./az\": \"485c\",\n\t\"./az.js\": \"485c\",\n\t\"./be\": \"1fc1\",\n\t\"./be.js\": \"1fc1\",\n\t\"./bg\": \"84aa\",\n\t\"./bg.js\": \"84aa\",\n\t\"./bm\": \"a7fa\",\n\t\"./bm.js\": \"a7fa\",\n\t\"./bn\": \"9043\",\n\t\"./bn-bd\": \"9686\",\n\t\"./bn-bd.js\": \"9686\",\n\t\"./bn.js\": \"9043\",\n\t\"./bo\": \"d26a\",\n\t\"./bo.js\": \"d26a\",\n\t\"./br\": \"6887\",\n\t\"./br.js\": \"6887\",\n\t\"./bs\": \"2554\",\n\t\"./bs.js\": \"2554\",\n\t\"./ca\": \"d716\",\n\t\"./ca.js\": \"d716\",\n\t\"./cs\": \"3c0d\",\n\t\"./cs.js\": \"3c0d\",\n\t\"./cv\": \"03ec\",\n\t\"./cv.js\": \"03ec\",\n\t\"./cy\": \"9797\",\n\t\"./cy.js\": \"9797\",\n\t\"./da\": \"0f14\",\n\t\"./da.js\": \"0f14\",\n\t\"./de\": \"b469\",\n\t\"./de-at\": \"b3eb\",\n\t\"./de-at.js\": \"b3eb\",\n\t\"./de-ch\": \"bb71\",\n\t\"./de-ch.js\": \"bb71\",\n\t\"./de.js\": \"b469\",\n\t\"./dv\": \"598a\",\n\t\"./dv.js\": \"598a\",\n\t\"./el\": \"8d47\",\n\t\"./el.js\": \"8d47\",\n\t\"./en-au\": \"0e6b\",\n\t\"./en-au.js\": \"0e6b\",\n\t\"./en-ca\": \"3886\",\n\t\"./en-ca.js\": \"3886\",\n\t\"./en-gb\": \"39a6\",\n\t\"./en-gb.js\": \"39a6\",\n\t\"./en-ie\": \"e1d3\",\n\t\"./en-ie.js\": \"e1d3\",\n\t\"./en-il\": \"7333\",\n\t\"./en-il.js\": \"7333\",\n\t\"./en-in\": \"ec2e\",\n\t\"./en-in.js\": \"ec2e\",\n\t\"./en-nz\": \"6f50\",\n\t\"./en-nz.js\": \"6f50\",\n\t\"./en-sg\": \"b7e9\",\n\t\"./en-sg.js\": \"b7e9\",\n\t\"./eo\": \"65db\",\n\t\"./eo.js\": \"65db\",\n\t\"./es\": \"898b\",\n\t\"./es-do\": \"0a3c\",\n\t\"./es-do.js\": \"0a3c\",\n\t\"./es-mx\": \"b5b7\",\n\t\"./es-mx.js\": \"b5b7\",\n\t\"./es-us\": \"55c9\",\n\t\"./es-us.js\": \"55c9\",\n\t\"./es.js\": \"898b\",\n\t\"./et\": \"ec18\",\n\t\"./et.js\": \"ec18\",\n\t\"./eu\": \"0ff2\",\n\t\"./eu.js\": \"0ff2\",\n\t\"./fa\": \"8df4\",\n\t\"./fa.js\": \"8df4\",\n\t\"./fi\": \"81e9\",\n\t\"./fi.js\": \"81e9\",\n\t\"./fil\": \"d69a\",\n\t\"./fil.js\": \"d69a\",\n\t\"./fo\": \"0721\",\n\t\"./fo.js\": \"0721\",\n\t\"./fr\": \"9f26\",\n\t\"./fr-ca\": \"d9f8\",\n\t\"./fr-ca.js\": \"d9f8\",\n\t\"./fr-ch\": \"0e49\",\n\t\"./fr-ch.js\": \"0e49\",\n\t\"./fr.js\": \"9f26\",\n\t\"./fy\": \"7118\",\n\t\"./fy.js\": \"7118\",\n\t\"./ga\": \"5120\",\n\t\"./ga.js\": \"5120\",\n\t\"./gd\": \"f6b4\",\n\t\"./gd.js\": \"f6b4\",\n\t\"./gl\": \"8840\",\n\t\"./gl.js\": \"8840\",\n\t\"./gom-deva\": \"aaf2\",\n\t\"./gom-deva.js\": \"aaf2\",\n\t\"./gom-latn\": \"0caa\",\n\t\"./gom-latn.js\": \"0caa\",\n\t\"./gu\": \"e0c5\",\n\t\"./gu.js\": \"e0c5\",\n\t\"./he\": \"c7aa\",\n\t\"./he.js\": \"c7aa\",\n\t\"./hi\": \"dc4d\",\n\t\"./hi.js\": \"dc4d\",\n\t\"./hr\": \"4ba9\",\n\t\"./hr.js\": \"4ba9\",\n\t\"./hu\": \"5b14\",\n\t\"./hu.js\": \"5b14\",\n\t\"./hy-am\": \"d6b6\",\n\t\"./hy-am.js\": \"d6b6\",\n\t\"./id\": \"5038\",\n\t\"./id.js\": \"5038\",\n\t\"./is\": \"0558\",\n\t\"./is.js\": \"0558\",\n\t\"./it\": \"6e98\",\n\t\"./it-ch\": \"6f12\",\n\t\"./it-ch.js\": \"6f12\",\n\t\"./it.js\": \"6e98\",\n\t\"./ja\": \"079e\",\n\t\"./ja.js\": \"079e\",\n\t\"./jv\": \"b540\",\n\t\"./jv.js\": \"b540\",\n\t\"./ka\": \"201b\",\n\t\"./ka.js\": \"201b\",\n\t\"./kk\": \"6d79\",\n\t\"./kk.js\": \"6d79\",\n\t\"./km\": \"e81d\",\n\t\"./km.js\": \"e81d\",\n\t\"./kn\": \"3e92\",\n\t\"./kn.js\": \"3e92\",\n\t\"./ko\": \"22f8\",\n\t\"./ko.js\": \"22f8\",\n\t\"./ku\": \"2421\",\n\t\"./ku.js\": \"2421\",\n\t\"./ky\": \"9609\",\n\t\"./ky.js\": \"9609\",\n\t\"./lb\": \"440c\",\n\t\"./lb.js\": \"440c\",\n\t\"./lo\": \"b29d\",\n\t\"./lo.js\": \"b29d\",\n\t\"./lt\": \"26f9\",\n\t\"./lt.js\": \"26f9\",\n\t\"./lv\": \"b97c\",\n\t\"./lv.js\": \"b97c\",\n\t\"./me\": \"293c\",\n\t\"./me.js\": \"293c\",\n\t\"./mi\": \"688b\",\n\t\"./mi.js\": \"688b\",\n\t\"./mk\": \"6909\",\n\t\"./mk.js\": \"6909\",\n\t\"./ml\": \"02fb\",\n\t\"./ml.js\": \"02fb\",\n\t\"./mn\": \"958b\",\n\t\"./mn.js\": \"958b\",\n\t\"./mr\": \"39bd\",\n\t\"./mr.js\": \"39bd\",\n\t\"./ms\": \"ebe4\",\n\t\"./ms-my\": \"6403\",\n\t\"./ms-my.js\": \"6403\",\n\t\"./ms.js\": \"ebe4\",\n\t\"./mt\": \"1b45\",\n\t\"./mt.js\": \"1b45\",\n\t\"./my\": \"8689\",\n\t\"./my.js\": \"8689\",\n\t\"./nb\": \"6ce3\",\n\t\"./nb.js\": \"6ce3\",\n\t\"./ne\": \"3a39\",\n\t\"./ne.js\": \"3a39\",\n\t\"./nl\": \"facd\",\n\t\"./nl-be\": \"db29\",\n\t\"./nl-be.js\": \"db29\",\n\t\"./nl.js\": \"facd\",\n\t\"./nn\": \"b84c\",\n\t\"./nn.js\": \"b84c\",\n\t\"./oc-lnc\": \"167b\",\n\t\"./oc-lnc.js\": \"167b\",\n\t\"./pa-in\": \"f3ff\",\n\t\"./pa-in.js\": \"f3ff\",\n\t\"./pl\": \"8d57\",\n\t\"./pl.js\": \"8d57\",\n\t\"./pt\": \"f260\",\n\t\"./pt-br\": \"d2d4\",\n\t\"./pt-br.js\": \"d2d4\",\n\t\"./pt.js\": \"f260\",\n\t\"./ro\": \"972c\",\n\t\"./ro.js\": \"972c\",\n\t\"./ru\": \"957c\",\n\t\"./ru.js\": \"957c\",\n\t\"./sd\": \"6784\",\n\t\"./sd.js\": \"6784\",\n\t\"./se\": \"ffff\",\n\t\"./se.js\": \"ffff\",\n\t\"./si\": \"eda5\",\n\t\"./si.js\": \"eda5\",\n\t\"./sk\": \"7be6\",\n\t\"./sk.js\": \"7be6\",\n\t\"./sl\": \"8155\",\n\t\"./sl.js\": \"8155\",\n\t\"./sq\": \"c8f3\",\n\t\"./sq.js\": \"c8f3\",\n\t\"./sr\": \"cf1e\",\n\t\"./sr-cyrl\": \"13e9\",\n\t\"./sr-cyrl.js\": \"13e9\",\n\t\"./sr.js\": \"cf1e\",\n\t\"./ss\": \"52bd\",\n\t\"./ss.js\": \"52bd\",\n\t\"./sv\": \"5fbd\",\n\t\"./sv.js\": \"5fbd\",\n\t\"./sw\": \"74dc\",\n\t\"./sw.js\": \"74dc\",\n\t\"./ta\": \"3de5\",\n\t\"./ta.js\": \"3de5\",\n\t\"./te\": \"5cbb\",\n\t\"./te.js\": \"5cbb\",\n\t\"./tet\": \"576c\",\n\t\"./tet.js\": \"576c\",\n\t\"./tg\": \"3b1b\",\n\t\"./tg.js\": \"3b1b\",\n\t\"./th\": \"10e8\",\n\t\"./th.js\": \"10e8\",\n\t\"./tk\": \"5aff\",\n\t\"./tk.js\": \"5aff\",\n\t\"./tl-ph\": \"0f38\",\n\t\"./tl-ph.js\": \"0f38\",\n\t\"./tlh\": \"cf75\",\n\t\"./tlh.js\": \"cf75\",\n\t\"./tr\": \"0e81\",\n\t\"./tr.js\": \"0e81\",\n\t\"./tzl\": \"cf51\",\n\t\"./tzl.js\": \"cf51\",\n\t\"./tzm\": \"c109\",\n\t\"./tzm-latn\": \"b53d\",\n\t\"./tzm-latn.js\": \"b53d\",\n\t\"./tzm.js\": \"c109\",\n\t\"./ug-cn\": \"6117\",\n\t\"./ug-cn.js\": \"6117\",\n\t\"./uk\": \"ada2\",\n\t\"./uk.js\": \"ada2\",\n\t\"./ur\": \"5294\",\n\t\"./ur.js\": \"5294\",\n\t\"./uz\": \"2e8c\",\n\t\"./uz-latn\": \"010e\",\n\t\"./uz-latn.js\": \"010e\",\n\t\"./uz.js\": \"2e8c\",\n\t\"./vi\": \"2921\",\n\t\"./vi.js\": \"2921\",\n\t\"./x-pseudo\": \"fd7e\",\n\t\"./x-pseudo.js\": \"fd7e\",\n\t\"./yo\": \"7f33\",\n\t\"./yo.js\": \"7f33\",\n\t\"./zh-cn\": \"5c3a\",\n\t\"./zh-cn.js\": \"5c3a\",\n\t\"./zh-hk\": \"49ab\",\n\t\"./zh-hk.js\": \"49ab\",\n\t\"./zh-mo\": \"3a6c\",\n\t\"./zh-mo.js\": \"3a6c\",\n\t\"./zh-tw\": \"90ea\",\n\t\"./zh-tw.js\": \"90ea\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"4678\";","module.exports = __webpack_public_path__ + \"assets/media/rezzo.b0ef15d8.wav\";","\nimport { Options, prop, Vue } from \"vue-class-component\";\nimport { SpotifyWebApi } from \"spotify-web-api-ts\";\nimport {\n  CurrentlyPlaying,\n  Playlist,\n  PlaylistItem,\n  PrivateUser,\n  SimplifiedPlaylist,\n  Track,\n} from \"spotify-web-api-ts/types/types/SpotifyObjects\";\nimport { GetPlaylistItemsResponse } from \"spotify-web-api-ts/types/types/SpotifyResponses\";\nimport genius from \"genius-lyrics\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nclass Props {\n  artist = prop<string>({ default: [] });\n  trackName = prop<string>({ default: \"\", required: true });\n  porcentElapsed = prop<number>({default: 0, required: true})\n  geniusKey = prop<string>({});\n}\n\n@Options({\n  components: {},\n  watch: {\n    trackName: \"watchTrackName\",\n    geniusKey: \"watchGeniusKey\",\n     },\n})\nexport default class Lyrics extends Vue.with(Props) {\n  loading = true;\n  lyrics : string[] = []\n\n  genius = axios.create({\n    baseURL: \"https://api.genius.com\",\n    params: {\n      access_token:\n        this.geniusKey,\n    },\n  });\n\nwatchGeniusKey() {\nthis.genius = axios.create({\n    baseURL: \"https://api.genius.com\",\n    params: {\n      access_token:\n        this.geniusKey,\n    },\n  });\n}\n\nget currentIndex(): number {\n  if (!this.lyrics) {\n    return 0\n  }\n  const index = Math.round(this.lyrics.length * this.porcentElapsed / 100);\n  return index\n}\n\n  async watchTrackName() {\n    this.lyrics = [];\n    console.log(\"track name changed\", this.trackName);\n    if (this.trackName == \"\") {\n      return;\n    }\n    // title: this.track_name,\n    // artist: this.artist,\n    let search = await this.genius\n      .get(`/search`, { params: { q: `${this.artist} ${this.trackName}` } })\n      .then((r) => r.data.response?.hits);\n    console.log(\"find\", search);\n    if (!search || search.length == 0) {\n      // Retry without artist\n      search = await this.genius\n      .get(`/search`, { params: { q: `${this.trackName}` } })\n      .then((r) => r.data.response?.hits);\n    console.log(\"find\", search);\n    }\n    if (!search || search.length == 0) {\n    return\n    }\n    const firstResult = search.filter((s: any) => s.type === \"song\")[0];\n    const song = await this.genius\n      .get(firstResult.result.api_path)\n      .then((r) => r.data.response.song);\n    console.log(\"found song\", song);\n    const div = document.createElement(\"div\");\n    div.innerHTML = song.embed_content\n      .replace(`src='//`, `src='${location.protocol}//`)\n      .trim();\n    // console.log(div.innerHTML);\n    // console.log(song.embed_content)\n\n    const scriptURL = div.querySelector(\"script\")?.src || \"\";\n    const scriptTxt = await fetch(scriptURL).then((r) => r.text());\n\n    const jsonline = scriptTxt\n      .split(\"\\n\")\n      .find((l) => l.match(/document.write\\(JSON.parse/));\n    // console.log(\"json line\", jsonline);\n    if (!jsonline) return;\n    const jsonPart = jsonline\n      .replace(/^.*document.write\\(/, \"\")\n      .replace(/\\)$/, \"\");\n    // console.log(\"jsonPart\", jsonPart)\n    let lyrics = eval(jsonPart);\n    // console.log(\"lyrics = \", lyrics)\n\n    // Only take body\n    const span = document.createElement(\"span\");\n    span.innerHTML = lyrics;\n    // console.log(\"span\", span)\n    const blocks = span.querySelector(\".rg_embed_body\");\n    if (blocks) {\n      // console.log(\"blocks\", blocks.innerHTML)\n      lyrics = blocks.innerHTML\n    }\n\n    const lyricsWithoutHTML: string[] = lyrics\n      .split(\"\\n\")\n      .map((l: string) => this.extractContent(l, true));\n    const cleanedLyrics = _.reduce(\n      lyricsWithoutHTML,\n      (prev, current, index) => {\n        if (!index) {\n          return [current];\n        }\n        if (prev[prev.length - 1].trim() === \"\" && current.trim() === \"\") {\n          return prev;\n        }\n        if (current.match(/\\[.*\\]/)){\n          return prev\n        }\n        return [...prev, current];\n      },\n      [] as string[]\n    );\n\n    this.lyrics = cleanedLyrics\n    div.innerHTML = cleanedLyrics.join(\"<br>\");\n  }\n\n  extractContent(s: string, space: boolean) {\n    const span = document.createElement(\"span\");\n    span.innerHTML = s;\n    if (space) {\n      const children = span.querySelectorAll(\"*\");\n      for (let i = 0; i < children.length; i++) {\n        if (children[i].textContent) children[i].textContent += \" \";\n      }\n    }\n    return [span.textContent || span.innerText].toString().replace(/ +/g, \" \");\n  }\n\n  async mounted() {\n    console.log(\"lyrics mounted\", this.trackName);\n    this.watchTrackName();\n  }\n}\n","<template>\n  <link\n    href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\n    rel=\"stylesheet\"\n    integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\n    crossorigin=\"anonymous\"\n  />\n\n  <iframe v-if=\"soundVisualizer\" src=\"https://visualizer.ianfox.be/visual.php\" allow=\"microphone\" />\n  <div v-else class=\"iframe\" />\n  <div class=\"overlay\">\n    <ul class=\"nav nav-tabs\">\n      <li class=\"nav-item\">\n        <!-- <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active</a> -->\n        <button class=\"nav-link\" @click=\"login()\">Login</button>\n      </li>\n      <li class=\"nav-item\">\n        <button\n          class=\"nav-link\"\n          :class=\"{ active: menu === 'settings' }\"\n          @click=\"menu = 'settings'\"\n        >\n          Settings\n        </button>\n      </li>\n      <li class=\"nav-item\">\n        <button\n          class=\"nav-link\"\n          :class=\"{ active: menu === 'spotimix' }\"\n          @click=\"menu = 'spotimix'\"\n        >\n          Spotimix\n        </button>\n      </li>\n    </ul>\n\n    <div class=\"flex\">\n      <div class=\"flex-initial\" :hidden=\"menu !== 'settings'\">\n        <form @submit=\"setCredentials()\">\n          <input v-model=\"input_genius\" placeholder=\"genius key\"/><br/>\n          <input v-model=\"input_spotify\" placeholder=\"spotify key\"/><br/>\n          <button type=\"submit\">Save</button><br />\n          Sound Visualizer : <input type=\"checkbox\" v-model=\"soundVisualizer\" />\n          </form>\n        <div class=\"list-group\">\n          <div\n            class=\"list-group-item\"\n            v-for=\"playlist in playlists\"\n            :key=\"playlist.id\"\n          >\n            <div>\n              {{ playlist.name }}\n              <button\n                class=\"btn btn-success\"\n                v-if=\"!selectedPlaylists.find((p) => p.id === playlist.id)\"\n                @click=\"selectPlaylist(playlist)\"\n              >\n                Add\n              </button>\n              <button\n                class=\"btn btn-warning\"\n                v-else\n                @click=\"unselectPlaylist(playlist)\"\n              >\n                Remove\n              </button>\n              <!-- <button @click=\"copyToCloud(playlist)\">cloud</button> -->\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"flex-initial\" :hidden=\"menu !== 'spotimix'\">\n        <button class=\"btn btn-primary self-center\" @click=\"generateSpotimix()\">\n          Generate Spotimix\n        </button>\n        <div class=\"list-group\">\n          <draggable\n            v-model=\"selectedPlaylists\"\n            class=\"dragArea list-group w-full\"\n            item-key=\"id\"\n          >\n            <template #item=\"{ element }\">\n              <div\n                class=\"playlist list-group-item\"\n                :class=\"{\n                  'list-group-item-default': !playlistRefsVue[element.id]  || !playlistRefsVue[element.id].isActive,\n                  'list-group-item-success':\n                    playlistRefsVue[element.id] &&\n                    playlistRefsVue[element.id].isActive,\n                }\"\n              >\n                <playlist\n                  :ref=\"(el) => el && (playlistRefsVue[element.id] = el)\"\n                  :spotimix=\"spotimixTracks\"\n                  :playlist_id=\"element.id\"\n                  :playlist_name=\"element.name\"\n                  :access_token=\"spotifyApi.getAccessToken()\"\n                  :playing_track=\"playing_track\"\n                />\n                <input\n                  class=\"form-control form-control-sm\"\n                  type=\"number\"\n                  min=\"0\"\n                  v-model.number=\"playlistRepartition[element.id]\"\n                  @change=\"savePlaylistRepartition\"\n                /></div\n            ></template>\n          </draggable>\n        </div>\n      </div>\n      <div class=\"flex-auto\">\n        <player :access_token=\"access_token\" @next=\"setPlayingTrack()\"/>\n        <lyrics v-if=\"currentPlayingTrack\"\n          :trackName=\"currentPlayingTrack.name\"\n          :artist=\"currentPlayingTrack.artists[0].name\"\n          :porcentElapsed=\"this.porcentElapsed\"\n          :geniusKey=\"this.geniusKey\"\n        />\n      </div>\n      <div class=\"flex-initial\">\n        <div class=\"list-group\">\n          <div\n            class=\"list-group-item\"\n            v-for=\"track in trackPreview.slice(0, 15)\"\n            :key=\"track.id\"\n          >\n            <div>\n              <img class=\"float-left\" :src=\"getTrackImage(track)\" />\n              {{ track.name }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport { SpotifyWebApi } from \"spotify-web-api-ts\";\nimport _ from \"lodash\";\nimport {\n  CurrentlyPlaying,\n  Playlist,\n  PlaylistItem,\n  PrivateUser,\n  SimplifiedPlaylist,\n  Track,\n} from \"spotify-web-api-ts/types/types/SpotifyObjects\";\nimport PlaylistVue from \"./components/Playlist.vue\";\nimport LyricsVue from \"./components/Lyrics.vue\";\nimport PlayerVue from \"./components/Player.vue\";\nimport { ref } from \"@vue/reactivity\";\nimport draggable from \"vuedraggable\";\nimport { GetPlaylistItemsResponse } from \"spotify-web-api-ts/types/types/SpotifyResponses\";\nimport moment from \"moment\";\n\nconst client_id = \"adc341012eea48f581d67ff19d55b250\";\nconst url = new URL(location.href);\nconst redirect_uri = url.protocol + \"//\" + url.hostname + url.pathname;\nconst scopes =\n  \"user-read-private user-read-email user-library-read playlist-modify-public playlist-modify-private playlist-read-private playlist-read-collaborative user-library-modify user-library-read user-read-recently-played user-top-read user-read-playback-position user-top-read user-read-playback-position user-read-playback-state user-modify-playback-state user-read-currently-playing app-remote-control streaming\";\n\ninterface TrackDuration {\n  startTime: moment.Moment;\n  duration: number;\n}\n\n@Options({\n  components: {\n    playlist: PlaylistVue,\n    draggable: draggable,\n    lyrics: LyricsVue,\n    player: PlayerVue,\n  },\n  watch: {\n    playlistRepartition: \"savePlaylistRepartition\",\n    selectedPlaylists: \"saveSelectedPlaylists\",\n    soundVisualizer: \"saveSoundVisualizer\",\n  },\n})\nexport default class App extends Vue {\n  input_genius = localStorage.getItem(\"genius_key\") || \"\";\n  input_spotify = localStorage.getItem(\"spotify_key\") || \"\";\n  soundVisualizer = localStorage.getItem(\"sound_visualizer\") === \"true\";\n\n  spotifyApi = new SpotifyWebApi({\n    clientSecret: this.input_spotify,\n    clientId: client_id,\n    redirectUri: redirect_uri,\n  });\n  geniusKey = this.input_genius;\n  access_token = \"\";\n\n  playlists: SimplifiedPlaylist[] = [];\n  spotimix: Track[] = [];\n  spotimixId = \"\";\n  user?: PrivateUser;\n  playing_track = \"\";\n  menu = \"settings\";\n  tracksImage: { [key: string]: string } = {};\n\n  trackDuration: TrackDuration = { startTime: moment(), duration: 0 };\n  porcentElapsed = 0;\n\n  //Refs\n  playlistRefsVue: { [key: string]: PlaylistVue } = {};\n\n  // Inputs\n  playlistRepartition: { [key: string]: number } = {};\n\n  setCredentials() {\n    this.spotifyApi = new SpotifyWebApi({\n      clientSecret: this.input_spotify,\n      clientId: client_id,\n      redirectUri: redirect_uri,\n    });\n    localStorage.setItem(\"genius_key\", this.input_genius);\n    localStorage.setItem(\"spotify_key\", this.input_spotify);\n    this.mounted();\n  }\n\n  saveSoundVisualizer() {\n    localStorage.setItem(\"sound_visualizer\", `${this.soundVisualizer}`);\n  }\n\n  savePlaylistRepartition() {\n    console.log(\"save repartition\");\n    localStorage.setItem(\n      \"playlistRepartition\",\n      JSON.stringify(this.playlistRepartition)\n    );\n  }\n  initPlaylistRepartition() {\n    this.playlistRepartition = JSON.parse(\n      localStorage.getItem(\"playlistRepartition\") || \"{}\"\n    );\n  }\n\n  getTrackImage(track: Track) {\n    return track.album.images.find((i) => i.width === 64)?.url;\n  }\n\n  updatePorcentElapsed() {\n    // console.log(\"total duration\", this.trackDuration.duration)\n    // console.log(\"elapsed ms\", moment.duration(moment().diff(this.trackDuration.startTime)).asMilliseconds())\n    // console.log(\"start\", this.trackDuration.startTime)\n    // console.log(\"now\", moment())\n    this.porcentElapsed = Math.round(\n      (moment\n        .duration(moment().diff(this.trackDuration.startTime))\n        .asMilliseconds() /\n        (this.trackDuration.duration || 1)) *\n        100\n    );\n    // console.log(\"porcent\", this.porcentElapsed )\n    setTimeout(() => this.updatePorcentElapsed(), 1000);\n  }\n\n  get trackPreview(): Track[] {\n    return this.currentPlayingTrack\n      ? [this.currentPlayingTrack, ...this.tracksAfter]\n      : this.tracksAfter;\n  }\n\n  get spotimixTracks(): string[] {\n    return this.spotimix.map((s) => s.uri);\n  }\n\n  get currentPlayingTrack(): Track | undefined {\n    return this.spotimix.find((t) => t.uri === this.playing_track);\n  }\n\n  get refreshToken(): string | null {\n    return localStorage.getItem(\"refresh_token\");\n  }\n\n  set refreshToken(refreshToken: string | null) {\n    if (refreshToken) {\n      localStorage.setItem(\"refresh_token\", refreshToken);\n    } else {\n      localStorage.removeItem(\"refresh_token\");\n    }\n  }\n\n  saveSelectedPlaylists() {\n    console.log(\"save selected\");\n    localStorage.setItem(\n      \"selected_playlists\",\n      JSON.stringify(this.selectedPlaylists)\n    );\n  }\n\n  initSelectedPlaylists() {\n    this.selectedPlaylists = JSON.parse(\n      localStorage.getItem(\"selected_playlists\") || \"[]\"\n    );\n  }\n\n  selectedPlaylists: SimplifiedPlaylist[] = [];\n\n  selectPlaylist(playlist: SimplifiedPlaylist) {\n    this.selectedPlaylists = _.uniqBy(\n      this.selectedPlaylists.concat(playlist),\n      (p) => p.id\n    );\n  }\n\n  unselectPlaylist(playlist: SimplifiedPlaylist) {\n    this.selectedPlaylists = this.selectedPlaylists.filter(\n      (p) => p.id !== playlist.id\n    );\n  }\n\n  async updateAccessToken() {\n    if (!this.refreshToken) {\n      return;\n    }\n    const accessToken = await this.spotifyApi.getRefreshedAccessToken(\n      this.refreshToken\n    );\n    this.spotifyApi.setAccessToken(accessToken.access_token);\n    this.access_token = accessToken.access_token;\n    setTimeout(\n      () => this.updateAccessToken(),\n      accessToken.expires_in * 1000 - 10 * 60 * 1000\n    );\n  }\n\n  async mounted() {\n    const code = new URLSearchParams(window.location.search).get(\"code\");\n    if (code) {\n      const accessToken = await this.spotifyApi.getRefreshableUserTokens(code);\n      this.refreshToken = accessToken.refresh_token;\n      window.location.search = \"\";\n    }\n    if (this.refreshToken) {\n      await this.updateAccessToken();\n    } else {\n      this.login();\n    }\n\n    this.initPlaylistRepartition();\n    this.initSelectedPlaylists();\n\n    if (this.selectedPlaylists.length) {\n      this.menu = \"spotimix\";\n    }\n\n    this.user = await this.spotifyApi.users.getMe();\n\n    this.playlists = await this.spotifyApi.playlists\n      .getMyPlaylists({ limit: 50 })\n      .then((lists) => lists.items);\n\n    const spotimixExist = this.playlists.find(\n      (playlist) => playlist.name === \"spotimix\"\n    );\n    let spotimix: Playlist;\n    if (spotimixExist) {\n      spotimix = await this.spotifyApi.playlists.getPlaylist(spotimixExist.id);\n    } else {\n      spotimix = await this.spotifyApi.playlists.createPlaylist(\n        this.user.id,\n        \"spotimix\",\n        {\n          public: false,\n          collaborative: false,\n          description: \"generated playlist by spotimix application\",\n        }\n      );\n    }\n    this.spotimixId = spotimix.id;\n\n    // Spotimix need to be loaded before setting playingTrack to get the total duration_ms of the song\n    this.loadSpotimix();\n\n    this.setPlayingTrack();\n    this.updatePorcentElapsed();\n  }\n\n  async setPlayingTrack() {\n    const current_playing =\n      (await this.spotifyApi.player.getCurrentlyPlayingTrack()) as CurrentlyPlaying;\n    if (\n      !current_playing ||\n      current_playing.currently_playing_type !== \"track\" ||\n      !current_playing.item\n    ) {\n      setTimeout(() => this.setPlayingTrack(), 30 * 1000);\n      return;\n    }\n    this.playing_track = current_playing.item.uri || \"\";\n    const durationBeforeEnd =\n      current_playing.item?.duration_ms - (current_playing.progress_ms || 0);\n\n    this.trackDuration = {\n      startTime: moment().add(\n        -(current_playing.item?.duration_ms || 0) + durationBeforeEnd,\n        \"milliseconds\"\n      ),\n      duration: current_playing.item?.duration_ms || 0,\n    };\n\n    setTimeout(() => this.setPlayingTrack(), durationBeforeEnd + 200);\n  }\n\n  login() {\n    window.location.href = `https://accounts.spotify.com/authorize?response_type=code&client_id=${client_id}&scope=${encodeURIComponent(\n      scopes\n    )}&redirect_uri=${encodeURIComponent(redirect_uri)}`;\n  }\n\n  async getAllTracksBefore(): Promise<Track[]> {\n    if (!this.spotimix) {\n      return [];\n    }\n    const currentTrack =\n      (await this.spotifyApi.player.getCurrentlyPlayingTrack()) as CurrentlyPlaying;\n\n    const currentIndex = this.spotimix.findIndex(\n      (t) => t.uri === currentTrack.item?.uri\n    );\n    if (currentIndex === -1) {\n      console.log(\"track not found in spotimix\");\n      return [];\n    }\n\n    return this.spotimix.slice(0, currentIndex + 1);\n  }\n\n  get tracksAfter(): Track[] {\n    if (!this.spotimix) {\n      return [];\n    }\n    const currentIndex = this.spotimix.findIndex(\n      (t) => t.uri === this.playing_track\n    );\n    if (currentIndex === -1) {\n      console.log(\"track not found in spotimix\");\n      return [];\n    }\n\n    return this.spotimix.slice(currentIndex + 1);\n  }\n\n  async loadSpotimix() {\n    console.log(\"load spotimix\");\n    let offset = 0;\n    const limit = 100;\n    let items: GetPlaylistItemsResponse;\n    let tracksRaw: PlaylistItem[] = [];\n    do {\n      items = await this.spotifyApi.playlists.getPlaylistItems(\n        this.spotimixId,\n        { offset, limit }\n      );\n      tracksRaw = tracksRaw.concat(items.items);\n      offset = tracksRaw.length;\n    } while (items.items.length === limit);\n\n    this.spotimix = tracksRaw.map((t) => t.track as Track);\n  }\n\n  async generateSpotimix() {\n    if (!this.spotimix) {\n      return;\n    }\n    await this.loadSpotimix();\n\n    let tracksToAdd: string[] = [];\n    // Create stacks to unqueue\n    const tracksToListen: { [key: string]: string[] } = {};\n    this.selectedPlaylists\n      .map((p) => p.id)\n      .forEach((playlist_id) => {\n        tracksToListen[playlist_id] =\n          this.playlistRefsVue[playlist_id].tracksToListen;\n      });\n\n    // Take all from stack\n    let elementAdded = 0;\n    do {\n      elementAdded = 0;\n      this.selectedPlaylists.forEach((playlist) => {\n        const selection = tracksToListen[playlist.id].slice(\n          0,\n          this.playlistRepartition[playlist.id]\n        );\n        tracksToAdd.push(...selection);\n        tracksToListen[playlist.id] = tracksToListen[playlist.id].slice(\n          this.playlistRepartition[playlist.id],\n          tracksToListen[playlist.id].length\n        );\n        elementAdded += selection.length;\n        console.log(\n          `added ${selection.length} elements on playlist ${\n            playlist.name\n          }, still ${tracksToListen[playlist.id].length} elements to add`\n        );\n      });\n    } while (elementAdded !== 0);\n\n    // // Get all track before\n    const trackPlayed = await this.getAllTracksBefore();\n    // Remove allready played\n    tracksToAdd = tracksToAdd.filter(\n      (t) => !trackPlayed.find((p) => p.uri === t)\n    );\n\n    // // Remove all tracks after\n    const tracksAfter = this.tracksAfter;\n    console.log(\"tracksAfter\", tracksAfter);\n\n    const chunks = _.chunk(tracksAfter, 100);\n    for (let i = 0; i < chunks.length; i++) {\n      const tracksAfter = chunks[i];\n      await this.spotifyApi.playlists.removePlaylistItems(\n        this.spotimixId,\n        tracksAfter.map((t) => t.uri)\n      );\n    }\n\n    // Add all tracks after\n    const chunks2 = _.chunk(tracksToAdd, 100);\n    for (let i = 0; i < chunks2.length; i++) {\n      const tracksToAdd = chunks2[i];\n      await this.spotifyApi.playlists.addItemsToPlaylist(\n        this.spotimixId,\n        tracksToAdd.map((t) => t)\n      );\n    }\n  }\n\n  async startPlaylist(playlist: SimplifiedPlaylist) {\n    if (!this.spotimix) {\n      return;\n    }\n    this.spotimix = await this.spotifyApi.playlists\n      .getPlaylist(this.spotimixId)\n      .then((r) => r.tracks.items.map((i) => i.track as Track));\n\n    let tracksToAdd = (\n      await this.spotifyApi.playlists.getPlaylistItems(playlist.id)\n    ).items;\n    // Get all track before\n    const trackPlayed = await this.getAllTracksBefore();\n    // Remove allready played\n    tracksToAdd = tracksToAdd.filter(\n      (t) => !trackPlayed.find((p) => p.uri === t.track.uri)\n    );\n\n    // Remove all tracks after\n    const tracksAfter = this.tracksAfter;\n\n    await this.spotifyApi.playlists.removePlaylistItems(\n      this.spotimixId,\n      tracksAfter.map((t) => t.uri)\n    );\n    // Add all tracks after\n    await this.spotifyApi.playlists.addItemsToPlaylist(\n      this.spotimixId,\n      tracksToAdd.map((t) => t.track.uri)\n    );\n  }\n\n  async copyToCloud(playlist: SimplifiedPlaylist) {\n    if (!this.user) {\n      return;\n    }\n    const tracks = await this.spotifyApi.playlists.getPlaylistItems(\n      playlist.id\n    );\n    const cloudName = playlist.name + \"-cloud\";\n    let cloudPlaylistIDTmp: string | undefined = this.playlists.find(\n      (p) => p.name === cloudName\n    )?.id;\n    if (!cloudPlaylistIDTmp) {\n      const cloudPlaylist = await this.spotifyApi.playlists.createPlaylist(\n        this.user.id,\n        cloudName,\n        {\n          public: playlist.public || false,\n          collaborative: playlist.collaborative || false,\n          description: playlist.description || undefined,\n        }\n      );\n      cloudPlaylistIDTmp = cloudPlaylist.id;\n    }\n\n    const cloudPlaylistID = cloudPlaylistIDTmp;\n\n    const trackIDs = await Promise.all(\n      tracks.items.map(async (t) => {\n        if (t.is_local) {\n          const cloudTrack = await this.spotifyApi.search.searchTracks(\n            t.track.name,\n            { limit: 1 }\n          );\n          if (cloudTrack.items[0]) {\n            return cloudTrack.items[0].uri;\n          } else {\n            console.log(\"fail to find track with name\", t.track.name);\n            return \"\";\n          }\n        } else {\n          return t.track.uri;\n        }\n      })\n    );\n\n    this.spotifyApi.playlists.addItemsToPlaylist(\n      cloudPlaylistID,\n      trackIDs.filter((t) => t)\n    );\n  }\n}\n</script>\n\n<style lang=\"less\">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n\n  @tailwind base;\n  @tailwind components;\n  @tailwind utilities;\n}\n\niframe,\n.iframe {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border: none;\n  box-sizing: border-box;\n}\n.iframe {\n  background-color: black;\n}\n\n.overlay {\n  z-index: 100;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  // background-color: #a23d3d38;\n  color: white;\n}\n\n.playlist div {\n  display: inline-block;\n}\n\ninput[type=\"number\"].form-control {\n  display: inline-block;\n  width: 50px;\n  margin-left: 5px;\n  // float:right;\n}\n\n.list-group {\n  .list-group-item-default {\n    background-color: #f9fafb1a;\n    color: white;\n  }\n}\ninput {\n  color: black\n}\n</style>\n","<template>\n  <div>\n    {{ playlist_name }} ({{ alreadyListenedTracks.length }}/{{\n      alreadyListenedTracks.length + tracksToListen.length\n    }})\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, prop, Vue } from \"vue-class-component\";\nimport { SpotifyWebApi } from \"spotify-web-api-ts\";\nimport {\n  CurrentlyPlaying,\n  Playlist,\n  PlaylistItem,\n  PrivateUser,\n  SimplifiedPlaylist,\n  Track,\n} from \"spotify-web-api-ts/types/types/SpotifyObjects\";\nimport { GetPlaylistItemsResponse } from \"spotify-web-api-ts/types/types/SpotifyResponses\";\n\nclass Props {\n  spotimix = prop<string[]>({ default: [] });\n  playlist_id = prop<string>({ default: \"\", required: true });\n  playlist_name = prop<string>({ default: \"\", required: true });\n  access_token = prop<string>({ default: \"\", required: true });\n  playing_track = prop<string>({ default: \"\" });\n}\n\n@Options({\n  components: {},\n  watch: { access_token: \"setAccessToken\" },\n})\nexport default class Libeay extends Vue.with(Props) {\n  loading = true;\n\n  tracksRaw: PlaylistItem[] = [];\n\n  spotifyApi = new SpotifyWebApi();\n\n  setAccessToken() {\n    this.spotifyApi.setAccessToken(this.access_token);\n  }\n\n  async mounted() {\n    this.loading = true;\n    if (!this.playlist_id || !this.access_token) {\n      return;\n    }\n    this.spotifyApi.setAccessToken(this.access_token);\n\n    let offset = 0;\n    const limit = 100;\n    let items: GetPlaylistItemsResponse;\n    do {\n      items = await this.spotifyApi.playlists.getPlaylistItems(\n        this.playlist_id,\n        { offset, limit }\n      );\n      this.tracksRaw = this.tracksRaw.concat(items.items);\n      offset = this.tracksRaw.length;\n    } while (items.items.length === limit);\n  }\n\n  get isActive(): boolean {\n    return (\n      this.tracksRaw.find((t) => t.track.uri === this.playing_track) !==\n      undefined\n    );\n  }\n\n  shuffle(array: string[]): string[] {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n\n  get tracksToListen(): string[] {\n    return this.shuffle(\n      this.tracksRaw\n        .map((t) => t.track.uri)\n        .filter((t) => !this.alreadyListenedTracks.includes(t))\n    );\n  }\n\n  get alreadyListenedTracks(): string[] {\n    if (!this.spotimix) {\n      return [];\n    }\n\n    const currentIndex = this.spotimix.findIndex(\n      (uri) => uri === this.playing_track\n    );\n    if (currentIndex === -1) {\n      console.log(\"track not found in spotimix\");\n      return [];\n    }\n\n    return this.spotimix\n      .slice(0, currentIndex + 1)\n      .filter((t) => this.tracksRaw.find((tr) => tr.track.uri === t));\n  }\n}\n</script>\n","\nimport { Options, prop, Vue } from \"vue-class-component\";\nimport { SpotifyWebApi } from \"spotify-web-api-ts\";\nimport {\n  CurrentlyPlaying,\n  Playlist,\n  PlaylistItem,\n  PrivateUser,\n  SimplifiedPlaylist,\n  Track,\n} from \"spotify-web-api-ts/types/types/SpotifyObjects\";\nimport { GetPlaylistItemsResponse } from \"spotify-web-api-ts/types/types/SpotifyResponses\";\n\nclass Props {\n  spotimix = prop<string[]>({ default: [] });\n  playlist_id = prop<string>({ default: \"\", required: true });\n  playlist_name = prop<string>({ default: \"\", required: true });\n  access_token = prop<string>({ default: \"\", required: true });\n  playing_track = prop<string>({ default: \"\" });\n}\n\n@Options({\n  components: {},\n  watch: { access_token: \"setAccessToken\" },\n})\nexport default class Libeay extends Vue.with(Props) {\n  loading = true;\n\n  tracksRaw: PlaylistItem[] = [];\n\n  spotifyApi = new SpotifyWebApi();\n\n  setAccessToken() {\n    this.spotifyApi.setAccessToken(this.access_token);\n  }\n\n  async mounted() {\n    this.loading = true;\n    if (!this.playlist_id || !this.access_token) {\n      return;\n    }\n    this.spotifyApi.setAccessToken(this.access_token);\n\n    let offset = 0;\n    const limit = 100;\n    let items: GetPlaylistItemsResponse;\n    do {\n      items = await this.spotifyApi.playlists.getPlaylistItems(\n        this.playlist_id,\n        { offset, limit }\n      );\n      this.tracksRaw = this.tracksRaw.concat(items.items);\n      offset = this.tracksRaw.length;\n    } while (items.items.length === limit);\n  }\n\n  get isActive(): boolean {\n    return (\n      this.tracksRaw.find((t) => t.track.uri === this.playing_track) !==\n      undefined\n    );\n  }\n\n  shuffle(array: string[]): string[] {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n\n  get tracksToListen(): string[] {\n    return this.shuffle(\n      this.tracksRaw\n        .map((t) => t.track.uri)\n        .filter((t) => !this.alreadyListenedTracks.includes(t))\n    );\n  }\n\n  get alreadyListenedTracks(): string[] {\n    if (!this.spotimix) {\n      return [];\n    }\n\n    const currentIndex = this.spotimix.findIndex(\n      (uri) => uri === this.playing_track\n    );\n    if (currentIndex === -1) {\n      console.log(\"track not found in spotimix\");\n      return [];\n    }\n\n    return this.spotimix\n      .slice(0, currentIndex + 1)\n      .filter((t) => this.tracksRaw.find((tr) => tr.track.uri === t));\n  }\n}\n","import { render } from \"./Playlist.vue?vue&type=template&id=cde3b47e\"\nimport script from \"./Playlist.vue?vue&type=script&lang=ts\"\nexport * from \"./Playlist.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div>\n      <p class=\"text-6xl\">\n        <span v-for=\"(l, index) in lyrics\" :key=\"index\">\n          <span :hidden=\"index < currentIndex-5 || index > currentIndex + 7\">{{l}}<br>\n          </span>\n          </span>\n      </p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, prop, Vue } from \"vue-class-component\";\nimport { SpotifyWebApi } from \"spotify-web-api-ts\";\nimport {\n  CurrentlyPlaying,\n  Playlist,\n  PlaylistItem,\n  PrivateUser,\n  SimplifiedPlaylist,\n  Track,\n} from \"spotify-web-api-ts/types/types/SpotifyObjects\";\nimport { GetPlaylistItemsResponse } from \"spotify-web-api-ts/types/types/SpotifyResponses\";\nimport genius from \"genius-lyrics\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nclass Props {\n  artist = prop<string>({ default: [] });\n  trackName = prop<string>({ default: \"\", required: true });\n  porcentElapsed = prop<number>({default: 0, required: true})\n  geniusKey = prop<string>({});\n}\n\n@Options({\n  components: {},\n  watch: {\n    trackName: \"watchTrackName\",\n    geniusKey: \"watchGeniusKey\",\n     },\n})\nexport default class Lyrics extends Vue.with(Props) {\n  loading = true;\n  lyrics : string[] = []\n\n  genius = axios.create({\n    baseURL: \"https://api.genius.com\",\n    params: {\n      access_token:\n        this.geniusKey,\n    },\n  });\n\nwatchGeniusKey() {\nthis.genius = axios.create({\n    baseURL: \"https://api.genius.com\",\n    params: {\n      access_token:\n        this.geniusKey,\n    },\n  });\n}\n\nget currentIndex(): number {\n  if (!this.lyrics) {\n    return 0\n  }\n  const index = Math.round(this.lyrics.length * this.porcentElapsed / 100);\n  return index\n}\n\n  async watchTrackName() {\n    this.lyrics = [];\n    console.log(\"track name changed\", this.trackName);\n    if (this.trackName == \"\") {\n      return;\n    }\n    // title: this.track_name,\n    // artist: this.artist,\n    let search = await this.genius\n      .get(`/search`, { params: { q: `${this.artist} ${this.trackName}` } })\n      .then((r) => r.data.response?.hits);\n    console.log(\"find\", search);\n    if (!search || search.length == 0) {\n      // Retry without artist\n      search = await this.genius\n      .get(`/search`, { params: { q: `${this.trackName}` } })\n      .then((r) => r.data.response?.hits);\n    console.log(\"find\", search);\n    }\n    if (!search || search.length == 0) {\n    return\n    }\n    const firstResult = search.filter((s: any) => s.type === \"song\")[0];\n    const song = await this.genius\n      .get(firstResult.result.api_path)\n      .then((r) => r.data.response.song);\n    console.log(\"found song\", song);\n    const div = document.createElement(\"div\");\n    div.innerHTML = song.embed_content\n      .replace(`src='//`, `src='${location.protocol}//`)\n      .trim();\n    // console.log(div.innerHTML);\n    // console.log(song.embed_content)\n\n    const scriptURL = div.querySelector(\"script\")?.src || \"\";\n    const scriptTxt = await fetch(scriptURL).then((r) => r.text());\n\n    const jsonline = scriptTxt\n      .split(\"\\n\")\n      .find((l) => l.match(/document.write\\(JSON.parse/));\n    // console.log(\"json line\", jsonline);\n    if (!jsonline) return;\n    const jsonPart = jsonline\n      .replace(/^.*document.write\\(/, \"\")\n      .replace(/\\)$/, \"\");\n    // console.log(\"jsonPart\", jsonPart)\n    let lyrics = eval(jsonPart);\n    // console.log(\"lyrics = \", lyrics)\n\n    // Only take body\n    const span = document.createElement(\"span\");\n    span.innerHTML = lyrics;\n    // console.log(\"span\", span)\n    const blocks = span.querySelector(\".rg_embed_body\");\n    if (blocks) {\n      // console.log(\"blocks\", blocks.innerHTML)\n      lyrics = blocks.innerHTML\n    }\n\n    const lyricsWithoutHTML: string[] = lyrics\n      .split(\"\\n\")\n      .map((l: string) => this.extractContent(l, true));\n    const cleanedLyrics = _.reduce(\n      lyricsWithoutHTML,\n      (prev, current, index) => {\n        if (!index) {\n          return [current];\n        }\n        if (prev[prev.length - 1].trim() === \"\" && current.trim() === \"\") {\n          return prev;\n        }\n        if (current.match(/\\[.*\\]/)){\n          return prev\n        }\n        return [...prev, current];\n      },\n      [] as string[]\n    );\n\n    this.lyrics = cleanedLyrics\n    div.innerHTML = cleanedLyrics.join(\"<br>\");\n  }\n\n  extractContent(s: string, space: boolean) {\n    const span = document.createElement(\"span\");\n    span.innerHTML = s;\n    if (space) {\n      const children = span.querySelectorAll(\"*\");\n      for (let i = 0; i < children.length; i++) {\n        if (children[i].textContent) children[i].textContent += \" \";\n      }\n    }\n    return [span.textContent || span.innerText].toString().replace(/ +/g, \" \");\n  }\n\n  async mounted() {\n    console.log(\"lyrics mounted\", this.trackName);\n    this.watchTrackName();\n  }\n}\n</script>\n","import { render } from \"./Lyrics.vue?vue&type=template&id=6769d588\"\nimport script from \"./Lyrics.vue?vue&type=script&lang=ts\"\nexport * from \"./Lyrics.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div>\n    <button class=\"btn btn-success\" @click=\"play()\">Play</button>\n      <button class=\"btn btn-primary\" @click=\"pause()\">Pause</button>\n      <button class=\"btn btn-warning\" @click=\"next()\">Next</button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, prop, Vue } from \"vue-class-component\";\nimport { SpotifyWebApi } from \"spotify-web-api-ts\";\nimport {\n  CurrentlyPlaying,\n  Playlist,\n  PlaylistItem,\n  PrivateUser,\n  SimplifiedPlaylist,\n  Track,\n} from \"spotify-web-api-ts/types/types/SpotifyObjects\";\nimport { GetPlaylistItemsResponse } from \"spotify-web-api-ts/types/types/SpotifyResponses\";\nimport genius from \"genius-lyrics\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport \"../assets/rezzo.wav\";\n\nclass Props {\n  access_token = prop<string>({ default: \"\" });\n}\n\n@Options({\n  components: {},\n  emits: [\"next\"],\n  watch: { access_token: \"setAccessToken\" },\n})\nexport default class Player extends Vue.with(Props) {\n  loading = true;\n  spotifyApi = new SpotifyWebApi();\n\n\n  setAccessToken() {\n    this.spotifyApi.setAccessToken(this.access_token);\n  }\n\n  play() {\n    this.spotifyApi.player.play();\n    this.$emit(\"next\");\n  }\n\n  pause() {\n    this.spotifyApi.player.pause();\n  }\n  async next() {\n    const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms))\n    const audio = new Audio(require(\"../assets/rezzo.wav\"));\n    \n    await this.spotifyApi.player.setVolume(80);\n    audio.volume = 0.3;\n    await audio.play();\n    await delay(3000);\n    audio.volume = 0.5;\n    await this.spotifyApi.player.setVolume(50);\n\n    await delay(1000);\n    audio.volume = 1;\n    await this.spotifyApi.player.setVolume(30);\n\n    await this.spotifyApi.player.skipToNext();\n\n    await delay(1000);\n    audio.volume = 0.5;\n    await this.spotifyApi.player.setVolume(50);\n\n    await delay(1000);\n    audio.volume = 0.3;\n    await this.spotifyApi.player.setVolume(80);\n\n    await delay(3000);\n    audio.volume = 0.3;\n    await this.spotifyApi.player.setVolume(100);\n\n    await audio.pause();\n    this.$emit(\"next\");\n\n  }\n}\n</script>\n","\nimport { Options, prop, Vue } from \"vue-class-component\";\nimport { SpotifyWebApi } from \"spotify-web-api-ts\";\nimport {\n  CurrentlyPlaying,\n  Playlist,\n  PlaylistItem,\n  PrivateUser,\n  SimplifiedPlaylist,\n  Track,\n} from \"spotify-web-api-ts/types/types/SpotifyObjects\";\nimport { GetPlaylistItemsResponse } from \"spotify-web-api-ts/types/types/SpotifyResponses\";\nimport genius from \"genius-lyrics\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport \"../assets/rezzo.wav\";\n\nclass Props {\n  access_token = prop<string>({ default: \"\" });\n}\n\n@Options({\n  components: {},\n  emits: [\"next\"],\n  watch: { access_token: \"setAccessToken\" },\n})\nexport default class Player extends Vue.with(Props) {\n  loading = true;\n  spotifyApi = new SpotifyWebApi();\n\n\n  setAccessToken() {\n    this.spotifyApi.setAccessToken(this.access_token);\n  }\n\n  play() {\n    this.spotifyApi.player.play();\n    this.$emit(\"next\");\n  }\n\n  pause() {\n    this.spotifyApi.player.pause();\n  }\n  async next() {\n    const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms))\n    const audio = new Audio(require(\"../assets/rezzo.wav\"));\n    \n    await this.spotifyApi.player.setVolume(80);\n    audio.volume = 0.3;\n    await audio.play();\n    await delay(3000);\n    audio.volume = 0.5;\n    await this.spotifyApi.player.setVolume(50);\n\n    await delay(1000);\n    audio.volume = 1;\n    await this.spotifyApi.player.setVolume(30);\n\n    await this.spotifyApi.player.skipToNext();\n\n    await delay(1000);\n    audio.volume = 0.5;\n    await this.spotifyApi.player.setVolume(50);\n\n    await delay(1000);\n    audio.volume = 0.3;\n    await this.spotifyApi.player.setVolume(80);\n\n    await delay(3000);\n    audio.volume = 0.3;\n    await this.spotifyApi.player.setVolume(100);\n\n    await audio.pause();\n    this.$emit(\"next\");\n\n  }\n}\n","import { render } from \"./Player.vue?vue&type=template&id=cc0fb1c6\"\nimport script from \"./Player.vue?vue&type=script&lang=ts\"\nexport * from \"./Player.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { Options, Vue } from \"vue-class-component\";\nimport { SpotifyWebApi } from \"spotify-web-api-ts\";\nimport _ from \"lodash\";\nimport {\n  CurrentlyPlaying,\n  Playlist,\n  PlaylistItem,\n  PrivateUser,\n  SimplifiedPlaylist,\n  Track,\n} from \"spotify-web-api-ts/types/types/SpotifyObjects\";\nimport PlaylistVue from \"./components/Playlist.vue\";\nimport LyricsVue from \"./components/Lyrics.vue\";\nimport PlayerVue from \"./components/Player.vue\";\nimport { ref } from \"@vue/reactivity\";\nimport draggable from \"vuedraggable\";\nimport { GetPlaylistItemsResponse } from \"spotify-web-api-ts/types/types/SpotifyResponses\";\nimport moment from \"moment\";\n\nconst client_id = \"adc341012eea48f581d67ff19d55b250\";\nconst url = new URL(location.href);\nconst redirect_uri = url.protocol + \"//\" + url.hostname + url.pathname;\nconst scopes =\n  \"user-read-private user-read-email user-library-read playlist-modify-public playlist-modify-private playlist-read-private playlist-read-collaborative user-library-modify user-library-read user-read-recently-played user-top-read user-read-playback-position user-top-read user-read-playback-position user-read-playback-state user-modify-playback-state user-read-currently-playing app-remote-control streaming\";\n\ninterface TrackDuration {\n  startTime: moment.Moment;\n  duration: number;\n}\n\n@Options({\n  components: {\n    playlist: PlaylistVue,\n    draggable: draggable,\n    lyrics: LyricsVue,\n    player: PlayerVue,\n  },\n  watch: {\n    playlistRepartition: \"savePlaylistRepartition\",\n    selectedPlaylists: \"saveSelectedPlaylists\",\n    soundVisualizer: \"saveSoundVisualizer\",\n  },\n})\nexport default class App extends Vue {\n  input_genius = localStorage.getItem(\"genius_key\") || \"\";\n  input_spotify = localStorage.getItem(\"spotify_key\") || \"\";\n  soundVisualizer = localStorage.getItem(\"sound_visualizer\") === \"true\";\n\n  spotifyApi = new SpotifyWebApi({\n    clientSecret: this.input_spotify,\n    clientId: client_id,\n    redirectUri: redirect_uri,\n  });\n  geniusKey = this.input_genius;\n  access_token = \"\";\n\n  playlists: SimplifiedPlaylist[] = [];\n  spotimix: Track[] = [];\n  spotimixId = \"\";\n  user?: PrivateUser;\n  playing_track = \"\";\n  menu = \"settings\";\n  tracksImage: { [key: string]: string } = {};\n\n  trackDuration: TrackDuration = { startTime: moment(), duration: 0 };\n  porcentElapsed = 0;\n\n  //Refs\n  playlistRefsVue: { [key: string]: PlaylistVue } = {};\n\n  // Inputs\n  playlistRepartition: { [key: string]: number } = {};\n\n  setCredentials() {\n    this.spotifyApi = new SpotifyWebApi({\n      clientSecret: this.input_spotify,\n      clientId: client_id,\n      redirectUri: redirect_uri,\n    });\n    localStorage.setItem(\"genius_key\", this.input_genius);\n    localStorage.setItem(\"spotify_key\", this.input_spotify);\n    this.mounted();\n  }\n\n  saveSoundVisualizer() {\n    localStorage.setItem(\"sound_visualizer\", `${this.soundVisualizer}`);\n  }\n\n  savePlaylistRepartition() {\n    console.log(\"save repartition\");\n    localStorage.setItem(\n      \"playlistRepartition\",\n      JSON.stringify(this.playlistRepartition)\n    );\n  }\n  initPlaylistRepartition() {\n    this.playlistRepartition = JSON.parse(\n      localStorage.getItem(\"playlistRepartition\") || \"{}\"\n    );\n  }\n\n  getTrackImage(track: Track) {\n    return track.album.images.find((i) => i.width === 64)?.url;\n  }\n\n  updatePorcentElapsed() {\n    // console.log(\"total duration\", this.trackDuration.duration)\n    // console.log(\"elapsed ms\", moment.duration(moment().diff(this.trackDuration.startTime)).asMilliseconds())\n    // console.log(\"start\", this.trackDuration.startTime)\n    // console.log(\"now\", moment())\n    this.porcentElapsed = Math.round(\n      (moment\n        .duration(moment().diff(this.trackDuration.startTime))\n        .asMilliseconds() /\n        (this.trackDuration.duration || 1)) *\n        100\n    );\n    // console.log(\"porcent\", this.porcentElapsed )\n    setTimeout(() => this.updatePorcentElapsed(), 1000);\n  }\n\n  get trackPreview(): Track[] {\n    return this.currentPlayingTrack\n      ? [this.currentPlayingTrack, ...this.tracksAfter]\n      : this.tracksAfter;\n  }\n\n  get spotimixTracks(): string[] {\n    return this.spotimix.map((s) => s.uri);\n  }\n\n  get currentPlayingTrack(): Track | undefined {\n    return this.spotimix.find((t) => t.uri === this.playing_track);\n  }\n\n  get refreshToken(): string | null {\n    return localStorage.getItem(\"refresh_token\");\n  }\n\n  set refreshToken(refreshToken: string | null) {\n    if (refreshToken) {\n      localStorage.setItem(\"refresh_token\", refreshToken);\n    } else {\n      localStorage.removeItem(\"refresh_token\");\n    }\n  }\n\n  saveSelectedPlaylists() {\n    console.log(\"save selected\");\n    localStorage.setItem(\n      \"selected_playlists\",\n      JSON.stringify(this.selectedPlaylists)\n    );\n  }\n\n  initSelectedPlaylists() {\n    this.selectedPlaylists = JSON.parse(\n      localStorage.getItem(\"selected_playlists\") || \"[]\"\n    );\n  }\n\n  selectedPlaylists: SimplifiedPlaylist[] = [];\n\n  selectPlaylist(playlist: SimplifiedPlaylist) {\n    this.selectedPlaylists = _.uniqBy(\n      this.selectedPlaylists.concat(playlist),\n      (p) => p.id\n    );\n  }\n\n  unselectPlaylist(playlist: SimplifiedPlaylist) {\n    this.selectedPlaylists = this.selectedPlaylists.filter(\n      (p) => p.id !== playlist.id\n    );\n  }\n\n  async updateAccessToken() {\n    if (!this.refreshToken) {\n      return;\n    }\n    const accessToken = await this.spotifyApi.getRefreshedAccessToken(\n      this.refreshToken\n    );\n    this.spotifyApi.setAccessToken(accessToken.access_token);\n    this.access_token = accessToken.access_token;\n    setTimeout(\n      () => this.updateAccessToken(),\n      accessToken.expires_in * 1000 - 10 * 60 * 1000\n    );\n  }\n\n  async mounted() {\n    const code = new URLSearchParams(window.location.search).get(\"code\");\n    if (code) {\n      const accessToken = await this.spotifyApi.getRefreshableUserTokens(code);\n      this.refreshToken = accessToken.refresh_token;\n      window.location.search = \"\";\n    }\n    if (this.refreshToken) {\n      await this.updateAccessToken();\n    } else {\n      this.login();\n    }\n\n    this.initPlaylistRepartition();\n    this.initSelectedPlaylists();\n\n    if (this.selectedPlaylists.length) {\n      this.menu = \"spotimix\";\n    }\n\n    this.user = await this.spotifyApi.users.getMe();\n\n    this.playlists = await this.spotifyApi.playlists\n      .getMyPlaylists({ limit: 50 })\n      .then((lists) => lists.items);\n\n    const spotimixExist = this.playlists.find(\n      (playlist) => playlist.name === \"spotimix\"\n    );\n    let spotimix: Playlist;\n    if (spotimixExist) {\n      spotimix = await this.spotifyApi.playlists.getPlaylist(spotimixExist.id);\n    } else {\n      spotimix = await this.spotifyApi.playlists.createPlaylist(\n        this.user.id,\n        \"spotimix\",\n        {\n          public: false,\n          collaborative: false,\n          description: \"generated playlist by spotimix application\",\n        }\n      );\n    }\n    this.spotimixId = spotimix.id;\n\n    // Spotimix need to be loaded before setting playingTrack to get the total duration_ms of the song\n    this.loadSpotimix();\n\n    this.setPlayingTrack();\n    this.updatePorcentElapsed();\n  }\n\n  async setPlayingTrack() {\n    const current_playing =\n      (await this.spotifyApi.player.getCurrentlyPlayingTrack()) as CurrentlyPlaying;\n    if (\n      !current_playing ||\n      current_playing.currently_playing_type !== \"track\" ||\n      !current_playing.item\n    ) {\n      setTimeout(() => this.setPlayingTrack(), 30 * 1000);\n      return;\n    }\n    this.playing_track = current_playing.item.uri || \"\";\n    const durationBeforeEnd =\n      current_playing.item?.duration_ms - (current_playing.progress_ms || 0);\n\n    this.trackDuration = {\n      startTime: moment().add(\n        -(current_playing.item?.duration_ms || 0) + durationBeforeEnd,\n        \"milliseconds\"\n      ),\n      duration: current_playing.item?.duration_ms || 0,\n    };\n\n    setTimeout(() => this.setPlayingTrack(), durationBeforeEnd + 200);\n  }\n\n  login() {\n    window.location.href = `https://accounts.spotify.com/authorize?response_type=code&client_id=${client_id}&scope=${encodeURIComponent(\n      scopes\n    )}&redirect_uri=${encodeURIComponent(redirect_uri)}`;\n  }\n\n  async getAllTracksBefore(): Promise<Track[]> {\n    if (!this.spotimix) {\n      return [];\n    }\n    const currentTrack =\n      (await this.spotifyApi.player.getCurrentlyPlayingTrack()) as CurrentlyPlaying;\n\n    const currentIndex = this.spotimix.findIndex(\n      (t) => t.uri === currentTrack.item?.uri\n    );\n    if (currentIndex === -1) {\n      console.log(\"track not found in spotimix\");\n      return [];\n    }\n\n    return this.spotimix.slice(0, currentIndex + 1);\n  }\n\n  get tracksAfter(): Track[] {\n    if (!this.spotimix) {\n      return [];\n    }\n    const currentIndex = this.spotimix.findIndex(\n      (t) => t.uri === this.playing_track\n    );\n    if (currentIndex === -1) {\n      console.log(\"track not found in spotimix\");\n      return [];\n    }\n\n    return this.spotimix.slice(currentIndex + 1);\n  }\n\n  async loadSpotimix() {\n    console.log(\"load spotimix\");\n    let offset = 0;\n    const limit = 100;\n    let items: GetPlaylistItemsResponse;\n    let tracksRaw: PlaylistItem[] = [];\n    do {\n      items = await this.spotifyApi.playlists.getPlaylistItems(\n        this.spotimixId,\n        { offset, limit }\n      );\n      tracksRaw = tracksRaw.concat(items.items);\n      offset = tracksRaw.length;\n    } while (items.items.length === limit);\n\n    this.spotimix = tracksRaw.map((t) => t.track as Track);\n  }\n\n  async generateSpotimix() {\n    if (!this.spotimix) {\n      return;\n    }\n    await this.loadSpotimix();\n\n    let tracksToAdd: string[] = [];\n    // Create stacks to unqueue\n    const tracksToListen: { [key: string]: string[] } = {};\n    this.selectedPlaylists\n      .map((p) => p.id)\n      .forEach((playlist_id) => {\n        tracksToListen[playlist_id] =\n          this.playlistRefsVue[playlist_id].tracksToListen;\n      });\n\n    // Take all from stack\n    let elementAdded = 0;\n    do {\n      elementAdded = 0;\n      this.selectedPlaylists.forEach((playlist) => {\n        const selection = tracksToListen[playlist.id].slice(\n          0,\n          this.playlistRepartition[playlist.id]\n        );\n        tracksToAdd.push(...selection);\n        tracksToListen[playlist.id] = tracksToListen[playlist.id].slice(\n          this.playlistRepartition[playlist.id],\n          tracksToListen[playlist.id].length\n        );\n        elementAdded += selection.length;\n        console.log(\n          `added ${selection.length} elements on playlist ${\n            playlist.name\n          }, still ${tracksToListen[playlist.id].length} elements to add`\n        );\n      });\n    } while (elementAdded !== 0);\n\n    // // Get all track before\n    const trackPlayed = await this.getAllTracksBefore();\n    // Remove allready played\n    tracksToAdd = tracksToAdd.filter(\n      (t) => !trackPlayed.find((p) => p.uri === t)\n    );\n\n    // // Remove all tracks after\n    const tracksAfter = this.tracksAfter;\n    console.log(\"tracksAfter\", tracksAfter);\n\n    const chunks = _.chunk(tracksAfter, 100);\n    for (let i = 0; i < chunks.length; i++) {\n      const tracksAfter = chunks[i];\n      await this.spotifyApi.playlists.removePlaylistItems(\n        this.spotimixId,\n        tracksAfter.map((t) => t.uri)\n      );\n    }\n\n    // Add all tracks after\n    const chunks2 = _.chunk(tracksToAdd, 100);\n    for (let i = 0; i < chunks2.length; i++) {\n      const tracksToAdd = chunks2[i];\n      await this.spotifyApi.playlists.addItemsToPlaylist(\n        this.spotimixId,\n        tracksToAdd.map((t) => t)\n      );\n    }\n  }\n\n  async startPlaylist(playlist: SimplifiedPlaylist) {\n    if (!this.spotimix) {\n      return;\n    }\n    this.spotimix = await this.spotifyApi.playlists\n      .getPlaylist(this.spotimixId)\n      .then((r) => r.tracks.items.map((i) => i.track as Track));\n\n    let tracksToAdd = (\n      await this.spotifyApi.playlists.getPlaylistItems(playlist.id)\n    ).items;\n    // Get all track before\n    const trackPlayed = await this.getAllTracksBefore();\n    // Remove allready played\n    tracksToAdd = tracksToAdd.filter(\n      (t) => !trackPlayed.find((p) => p.uri === t.track.uri)\n    );\n\n    // Remove all tracks after\n    const tracksAfter = this.tracksAfter;\n\n    await this.spotifyApi.playlists.removePlaylistItems(\n      this.spotimixId,\n      tracksAfter.map((t) => t.uri)\n    );\n    // Add all tracks after\n    await this.spotifyApi.playlists.addItemsToPlaylist(\n      this.spotimixId,\n      tracksToAdd.map((t) => t.track.uri)\n    );\n  }\n\n  async copyToCloud(playlist: SimplifiedPlaylist) {\n    if (!this.user) {\n      return;\n    }\n    const tracks = await this.spotifyApi.playlists.getPlaylistItems(\n      playlist.id\n    );\n    const cloudName = playlist.name + \"-cloud\";\n    let cloudPlaylistIDTmp: string | undefined = this.playlists.find(\n      (p) => p.name === cloudName\n    )?.id;\n    if (!cloudPlaylistIDTmp) {\n      const cloudPlaylist = await this.spotifyApi.playlists.createPlaylist(\n        this.user.id,\n        cloudName,\n        {\n          public: playlist.public || false,\n          collaborative: playlist.collaborative || false,\n          description: playlist.description || undefined,\n        }\n      );\n      cloudPlaylistIDTmp = cloudPlaylist.id;\n    }\n\n    const cloudPlaylistID = cloudPlaylistIDTmp;\n\n    const trackIDs = await Promise.all(\n      tracks.items.map(async (t) => {\n        if (t.is_local) {\n          const cloudTrack = await this.spotifyApi.search.searchTracks(\n            t.track.name,\n            { limit: 1 }\n          );\n          if (cloudTrack.items[0]) {\n            return cloudTrack.items[0].uri;\n          } else {\n            console.log(\"fail to find track with name\", t.track.name);\n            return \"\";\n          }\n        } else {\n          return t.track.uri;\n        }\n      })\n    );\n\n    this.spotifyApi.playlists.addItemsToPlaylist(\n      cloudPlaylistID,\n      trackIDs.filter((t) => t)\n    );\n  }\n}\n","import { render } from \"./App.vue?vue&type=template&id=234e8789\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=234e8789&lang=less\"\nscript.render = render\n\nexport default script","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport \"./assets/tailwind.css\";\n\ncreateApp(App).mount(\"#app\");\n"],"sourceRoot":""}